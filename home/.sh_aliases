# vim: set ft=sh
alias rm='rm -i'
alias rmf='rm -f'
alias rmr='rm -ir'
alias rmrf='rm -rf'
alias cp='cp -i'
alias cpr='cp -ir'
alias cpf='cp -f'
alias cprf='cp -rf'
alias mv='mv -i'
alias mvf='mv -f'

# color=auto
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias diff='diff --color=auto'

# change directory
alias ccd='cd ..'
alias cccd='cd ../..'
alias ccccd='cd ../../..'
alias cdd='cd $OLDPWD'

# lsd or exa or ls
if hash lsd 2> /dev/null; then
    alias l='lsd --group-dirs first -- '
    alias ls='lsd -F --group-dirs first -- '
    alias la='lsd -aF --group-dirs first -- '
    alias ll='lsd -lF --group-dirs first -- '
    alias lla='lsd -alF --group-dirs first -- '
    alias lt='lsd --tree -F --group-dirs first -- '
    alias lta='lsd --tree -aF --group-dirs first -- '
elif hash exa 2>/dev/null; then
    alias l='exa --group-directories-first'
    alias ls='exa -F --group-directories-first'
    alias la='exa -aF --group-directories-first'
    alias ll='exa -lgF --group-directories-first'
    alias lla='exa -algF --group-directories-first'
    alias lt='exa -TF --group-directories-first'
    alias lta='exa -TFa --group-directories-first'
else
    alias l='ls --color=auto --group-directories-first'
    alias ls='ls --color=auto --group-directories-first'
    alias la='ls --color=auto --group-directories-first -AF'
    alias ll='ls --color=auto --group-directories-first -lF'
    alias lla='ls --color=auto --group-directories-first -AlF'
    alias lh='ls --color=auto --group-directories-first -AlhF'
fi

# neovim or vim
if hash nvim 2>/dev/null; then
    alias nvi=nvim
    alias vim=nvim
    alias vi=nvim

    alias nvis="nvim -S Session.vim"
    alias vis="nvim -S Session.vim"

    alias snvi="sudo -E nvim"
    alias svi="sudo -E nvim"
elif hash vim 2>/dev/null; then
    alias vi=vim
    alias vis="vim -S Session.vim"

    alias svi="sudo -E vim"
fi

# kakoune
alias ka=kak
alias ska="sudo -E kak"

# helix
alias hx="helix"
alias shx="sudo -E hx"

# systemctl
alias sctl='sudo systemctl'
alias usctl='systemctl --user'
alias jctl='sudo journalctl'
alias ujctl='journalctl --user'
alias bctl=bluetoothctl

# Docker and Podman
alias pm="podman"
alias pc="podman-compose"

if hash podman 2> /dev/null; then
    alias dk="podman"
    alias dc="podman-compose"
elif groups | grep -qw docker; then
    alias dk="docker"
    alias dc="docker-compose"
    alias ds="docker service"
    alias dst="docker stack"
    alias dsw="docker swarm"
else
    alias dk="sudo -E docker"
    alias dc="sudo -E docker-compose"
    alias ds="sudo -E docker service"
    alias dst="sudo -E docker stack"
    alias dsw="sudo -E docker swarm"
fi

# dockviz
alias dockviz="docker run -it --rm -v /var/run/docker.sock:/var/run/docker.sock nate/dockviz"

# rustdoc
rd() {
    cargo doc
    PORT=${*:-8080}
    BASENAME=$(basename "$PWD")
    if ! docker ps | grep $BASENAME-doc > /dev/null; then
        docker run \
            --rm -itd \
            -p $PORT:8080 \
            -v $PWD/target/doc:/tmp \
            --name $BASENAME-doc \
            svenstaro/miniserve:alpine /tmp
    fi
    xdg-open http://localhost:$PORT/$(echo $BASENAME | sed -e 's/-/_/g')/index.html || true
}

# pcmanfm
alias p.='pcmanfm . &'

# zathura
za() {
    zathura $* &
}

# arch package managers
alias ya=yay
alias pcm="sudo pacman"
alias pa=paru

# vscode
alias c.='code .'

# micro
alias mi=micro

# amp
alias am=amp

# clipboard
if [[ "$(loginctl show-session $(awk '/tty/ {print $1}' <(loginctl)) -p Type | awk -F= '{print $2}')" = 'wayland' ]]; then
    alias xc='wl-copy'
    alias xp='wl-paste -t text'
else
    alias xc='xclip -i -selection clipboard'
    alias xp='xclip -o -selection clipboard'
fi

# hangul-misstypings
alias ㅊㅇ=cd
alias ㅣㄴ=ls

# git
function git_current_branch {
    git branch --show-current
}

function git_main_branch {
    git branch --format='%(refname:short)' --no-column --list main master | head -n 1
}

alias gdm='git diff origin/$(git_main_branch)'
alias gdo='git diff origin/$(git_current_branch)'
alias gpsup='git push -u origin $(git_current_branch)'
alias gc!!='git commit -v --amend --no-verify'
alias gca!!='git commit -v -a --amend --no-verify'
alias gp!!='git push --force-with-lease --no-verify'
alias grh1='git reset HEAD~1'
alias grhs='git reset --soft'
alias grhs1='git reset --soft HEAD~1'
alias grhsd='git reset --soft HEAD'
alias gsm='git switch $(git_main_branch)'
alias gswd='git switch --detach'
alias grbo='git rebase origin/$(git_current_branch)'
alias grbu='git rebase upstream/$(git_current_branch)'
alias grbom='git rebase origin/$(git_main_branch)'
alias grbum='git rebase upstream/$(git_main_branch)'
alias grbud='git rebase upstream/develop'
alias grbim='git rebase -i $(git_main_branch)'
alias grbium='git rebase -i upstream/$(git_main_branch)'

# python
alias py=python
alias pyvenv="pyenv virtualenv"

# aws ecr
function aws-ecr-login {
    aws ecr get-login-password \
        | docker login \
            --username AWS \
            --password-stdin \
            "$(aws sts get-caller-identity --query Account --output text).dkr.ecr.$(aws configure get region).amazonaws.com"
}

# sway
function tcp {
    if [[ "$(loginctl show-session $(awk '/tty/ {print $1}' <(loginctl)) -p Type | awk -F= '{print $2}')" = 'wayland' ]]; then
        swaymsg exec "alacritty --working-directory $PWD"
    else
        i3-msg exec "alacritty --working-directory $PWD"
    fi
}
function tcpx {
    swaymsg exec "WAYLAND_DISPLAY= WINIT_X11_SCALE_FACTOR=1.0 alacritty --working-directory $PWD"
}

# kubernetes
alias k=kubectl
alias ktx=kubectx
alias ktc="kubectx -c"
alias kns=kubens

# etc
alias mkdoc="pushd docs && make html && popd"

# local
if [ -f ~/.sh_aliases.local ]; then
    source ~/.sh_aliases.local
fi
