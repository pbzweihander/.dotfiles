filetype: bsv

detect:
    filename: "\\.bsv$"

rules:
    - constant: "\\b(tagged|Valid|Invalid|True|False)\\b"
    - identifier: "rule [a-zA-Z_0-9]+"
    - identifier: "endrule"
    - identifier: "method [a-zA-Z_0-9]+"
    - identifier: "endmethod"
    - identifier: "module [a-zA-Z_0-9]+"
    - identifier: "endmodule"
    - identifier: "typedef [a-zA-Z_0-9]+"
    - identifier: "let"
    - identifier: "\\b(automatic|cell|config|deassign|defparam|design|disable|edge|endconfig|endgenerate|endspecify|endtable|endtask|event|generate|genvar|ifnone|incdir|include|liblist|library|localparam|macromodule|negedge|noshowcancelled|posedge|pulsestyle_onevent|pulsestyle_ondetect|real|realtime|scalared|showcancelled|specify|specparam|table|task|time|use|vectored)\\b"
    - statement: "^\\b(import|export|package|endpackage)\\b"
    - statement: "\\b(initial|always|wait|force|release|assign)\\b"
    - statement: "\\b(begin|end|fork|join)\\b"
    - statement: "\\b(matches|action|endaction|actionvalue|endactionvalue|ancestor|deriving|return|match|par|endpar|provisos|dependencies|determines|seq|endseq|schedule|port|clock|reset|no_reset|clocked_by|reset_by|default_clock|default_reset|output_clock|output_reset|input_clock|input_reset|same_family|import|numeric|type)\\b"
    - statement: "\\b(forever|repeat|while|for|if|else|case|casex|casez|default|endcase)\\b"
    - type: "\\b(TAdd|TSub|TLog|TExp|TMul|TDiv|TMin|TMax|Bits|DefaultValue|Eq|Ord|Bounded|Arith|Literal|Bitwise|BitReduction|BitExtend|FShow|IsModule|Add|Max|Log|Mul|Div|Reg)(#\\()?\\b"
    - type: "\\b([a-zA-Z_][a-zA-Z0-9_]*)#\\(\\b"
    - type: "\\b(Bool)\\b"
    - symbol.brackets: "([(){}]|\\[|\\])"
    - symbol.operator: "([:;,+*|=!\\%@]|<|>|/|-|&==|===|!=|!==|&)"
    - constant.number: "\\b[0-9]+\\b"
    - special: "\\$([a-zA-Z_][a-zA-Z0-9_]*)\\b"

    - constant.string:
        start: "\""
        end: "\""
        skip: "\\\\."
        rules:
            - constant.specialChar: "\\\\."

    - constant.string:
        start: "r#+\""
        end: "\"#+"
        rules: []

    - comment:
        start: "//"
        end: "$"
        rules:
            - todo: "(TODO|XXX|FIXME):?"

    - comment:
        start: "/\\*"
        end: "\\*/"
        rules:
            - todo: "(TODO|XXX|FIXME):?"
